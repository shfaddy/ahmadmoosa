#define tubluh(s'p) #instr $s

iFraction random .1, .9
p1 += iFraction

aLeft, aRight subinstr "tubluh", $p

aLeft clip aLeft, 1, 0dbfs
aRight clip aRight, 1, 0dbfs

chnmix aLeft * p4, "left"
chnmix aRight * p5, "right"

endin#

$tubluh(dom'1/32, 1/8, 1/4, 1/2, 8, 5)
$tubluh(tak'1/128, 1/64, 1/16, 1/64, 12, 7)

instr tubluh

iPitch random 0, 1

iAttack init p4
iDecay init p5
iSustain init p6
iRelease init p7
iHigh init p8
iLow init p9

p3 init iAttack + iDecay + iRelease

aMainSubAmplitude linseg 0, iAttack, 1, iDecay, .25, iRelease, 0
aMainSubFrequency linseg cpsoct ( iHigh + iPitch ), iAttack, cpsoct ( iLow + iPitch )

aMainSub poscil aMainSubAmplitude, aMainSubFrequency

iMainSub init 1

outs aMainSub / iMainSub, aMainSub / iMainSub

aHighSubAmplitude linseg 0, iAttack/8, 1, iDecay/8, iSustain, iRelease/8, 0
aHighSubFrequency linseg cpsoct ( iHigh + 2 + iPitch ), iAttack/2, cpsoct ( iLow + 2 + iPitch )

aHighSub poscil aHighSubAmplitude, aHighSubFrequency

iHighSub init 8

outs aHighSub / iHighSub, aHighSub / iHighSub

aGogobell gogobel 1, cpsoct ( iLow + iPitch ), .5, .5, giStrikeFT, 6.0, 0.3, giVibratoFT

iGogobell init 4

outs aGogobell / iGogobell, aGogobell / iGogobell

aSnatchAmplitude linseg 0, iAttack/8, 1, iDecay/8, 0
aSnatchFrequency linseg cpsoct ( iHigh + 2 + iPitch ), iAttack/2, cpsoct ( iHigh + iPitch )

aSnatch noise aSnatchAmplitude, 0
aSnatch butterlp aSnatch, aSnatchFrequency

iSnatch init 1/4

outs aSnatch / iSnatch, aSnatch / iSnatch

endin
